// ================================================================================================================================
// ================================================================================================================================
// ================================================================================================================================

#ifndef _PIC_H
#define _PIC_H

// ================================================================================================================================
// ================================================================================================================================

#include "gdefs.h"

// ================================================================================================================================
// ================================================================================================================================

void    picEnable (WORD offset1, WORD offset2);

void    picDisable (void);

void    picSendEOI (BYTE irq);

// --------------------------------------------------------------------------------------------------------------------------------

void    irqSet (BYTE irq);

void    irqClear (BYTE irq);

// ================================================================================================================================
// ================================================================================================================================

#define PIC1                                    0x20
#define PIC1_COMMAND                            0x20
#define PIC1_DATA                               0x21

// --------------------------------------------------------------------------------------------------------------------------------

#define PIC2                                    0xA0
#define PIC2_COMMAND                            0xA0
#define PIC2_DATA                               0xA1

// --------------------------------------------------------------------------------------------------------------------------------

#define PIC_END_OF_INTERRUPT                    0x20
#define PIC_EOI                                 PIC_END_OF_INTERRUPT

// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++ Initialization Control Word (ICW) 1 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// +-----+--------+----------------------------------------------------------------------------------------------------------------
// |  0  |  IC4   |  If set the PIC excepts to receive ICW4 during initialization
// +-----+--------+----------------------------------------------------------------------------------------------------------------

#define PIC_ICW1_ICW4                           0x01

// +-----+--------+----------------------------------------------------------------------------------------------------------------
// |  1  |  SNGL  |  If set only one PIC in system. If cleared PIC is cascaded with slave PICs and ICW3 must be sent to controller.
// +-----+--------+----------------------------------------------------------------------------------------------------------------

#define PIC_ICW1_SINGLE                         0x02

// +-----+--------+----------------------------------------------------------------------------------------------------------------
// |  2  |  ADI   |  If set CALL address interval is 4, else 8. This is usually ignored by x86 and is default to 0.
// +-----+--------+----------------------------------------------------------------------------------------------------------------

#define PIC_ICW1_INTERVAL4                      0x04

// +-----+--------+----------------------------------------------------------------------------------------------------------------
// |  3  |  LTMI  |  If set Operate in Level Triggered Mode. If not set Operate in Edge Triggered Mode.
// +-----+--------+----------------------------------------------------------------------------------------------------------------

#define PIC_ICW1_TRIGGER                        0x08

// +-----+--------+----------------------------------------------------------------------------------------------------------------
// |  4  |  1     |  Initialization bit. Set if PIC is to be initialized.
// +-----+--------+----------------------------------------------------------------------------------------------------------------

#define PIC_ICW1_INIT                           0x10

// +-----+--------+----------------------------------------------------------------------------------------------------------------
// |  5  |  0     |  MCS-80/85: Interrupt vector address. x86 Architecture: Must be 0.
// +-----+--------+----------------------------------------------------------------------------------------------------------------
// |  6  |  0     |  MCS-80/85: Interrupt vector address. x86 Architecture: Must be 0.
// +-----+--------+----------------------------------------------------------------------------------------------------------------
// |  7  |  0     |  MCS-80/85: Interrupt vector address. x86 Architecture: Must be 0.
// +-----+--------+----------------------------------------------------------------------------------------------------------------

// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++ Initialization Control Word (ICW) 4 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// +-----+--------+----------------------------------------------------------------------------------------------------------------
// |  0  |  uPM   |  If set it is in 80x86 mode. Cleared if MCS-80/86 mode.
// +-----+--------+----------------------------------------------------------------------------------------------------------------

#define PIC_ICW4_8086                           0x01

// +-----+--------+----------------------------------------------------------------------------------------------------------------
// |  1  |  AEOI  |  If set on the last interrupt acknowledge pulse, controller automatically performs End of Interrupt (EOI) operation.
// +-----+--------+----------------------------------------------------------------------------------------------------------------

#define PIC_ICW4_AUTO_EOI                       0x02

// +-----+--------+----------------------------------------------------------------------------------------------------------------
// |  2  |  M/S   |  Only use if BUF is set. If set selects buffer master. Cleared if buffer slave.
// +-----+--------+----------------------------------------------------------------------------------------------------------------

#define PIC_ICW4_BUF_MASTER                     0x0C

// +-----+--------+----------------------------------------------------------------------------------------------------------------
// |  3  |  BUF   |  If set controller operates in buffer mode.
// +-----+--------+----------------------------------------------------------------------------------------------------------------

#define PIC_ICW4_BUF_SLAVE                      0x08

// +-----+--------+----------------------------------------------------------------------------------------------------------------
// |  4  |  SFNM  |  Special Fully Nested Mode, Used in systems with a large amount of cascade controller.
// +-----+--------+----------------------------------------------------------------------------------------------------------------

#define PIC_ICW4_SFNM                           0x0A

// +-----+--------+----------------------------------------------------------------------------------------------------------------
// | 5-7 |  0     |  Reserved, must be 0.
// +-----+--------+----------------------------------------------------------------------------------------------------------------

// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// --------------------------------------------------------------------------------------------------------------------------------

#define PIC1_INTERRUPT_TIMER                    0x0
#define PIC1_INTERRUPT_KEYBOARD                 0x1
#define PIC1_INTERRUPT_PIC2                     0x2
#define PIC1_INTERRUPT_COM2                     0x3
#define PIC1_INTERRUPT_COM1                     0x4
#define PIC1_INTERRUPT_LPT2                     0x5
#define PIC1_INTERRUPT_FLOPPY_DISK              0x6
#define PIC1_INTERRUPT_LPT1                     0x7

// --------------------------------------------------------------------------------------------------------------------------------

#define PIC2_INTERRUPT_REAL_TIME_CLOCK          0x8
#define PIC2_INTERRUPT_GENERAL_IO_9             0x9
#define PIC2_INTERRUPT_GENERAL_IO_A             0xA
#define PIC2_INTERRUPT_GENERAL_IO_B             0xB
#define PIC2_INTERRUPT_GENERAL_IO_C             0xC
#define PIC2_INTERRUPT_COPROCESSOR              0xD
#define PIC2_INTERRUPT_IDE_BUS_E                0xE
#define PIC2_INTERRUPT_IDE_BUS_F                0xF

// --------------------------------------------------------------------------------------------------------------------------------

// ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

// ================================================================================================================================
// ================================================================================================================================

#endif // _PIC_H

// ================================================================================================================================
// ================================================================================================================================
// ================================================================================================================================
